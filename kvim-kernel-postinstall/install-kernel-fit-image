#!/usr/bin/env bash

# Do not run inside an LXC container
if systemd-detect-virt --quiet --container; then
    exit 0
fi

abi="$1"
vmlinuz="${2:-/boot/vmlinuz-$abi}"
echo "Abi: ${abi}"
echo "vmlinuz: ${vmlinuz}"

kernel_version="5.3.0-10-kvim"
dtb_file="amlogic/meson-gxl-s905x-khadas-vim.dtb"
dtb_file_only=$(basename "${dtb_file}")
tmpdir=$(mktemp -d)

die () {
  echo "${1}"
  exit 1
}

if [ -f "/boot/vmlinuz-${kernel_version}" ]; then
  cp "/boot/vmlinuz-${kernel_version}" "${tmpdir}/" || \
    die "Unable to copy 'vmlinuz-${kernel_version}' from '/boot'"
else
  die "Unable to find 'vmlinuz-${kernel_version}' in '/boot'"
fi

if [ -f "/boot/initrd.img-${kernel_version}" ]; then
  cp "/boot/initrd.img-${kernel_version}" "${tmpdir}/" || \
    die "Unable to copy 'initrd.img-${kernel_version}' from '/boot'"
else
  die "Unable to find 'initrd.img-${kernel_version}' in '/boot'"
fi

if [ -f "/lib/firmware/${kernel_version}/device-tree/${dtb_file}" ]; then
  cp "/lib/firmware/${kernel_version}/device-tree/${dtb_file}" "${tmpdir}/" || \
    die "Unable to copy '${dtb_file}' from '/lib/firmware/${kernel_version}/device-tree/'"
else
  die "Unable to find '${dtb_file}' in '/lib/firmware/${kernel_version}/device-tree/'"
fi

cat <<-ITSTEMPLATE >"${tmpdir}/image.its"
  /dts-v1/;
   
  / {
      description = "U-Boot fitImage for ${kernel_version} kernel";
      #address-cells = <1>;
   
      images {
          kernel@0 {
              description = "Linux Kernel";
              data = /incbin/("./vmlinuz-${kernel_version}");
              type = "kernel";
              arch = "arm64";
              os = "linux";
              compression = "gzip";
              load = <0x1080000>;
              entry = <0x1080000>;
              hash@1 {
                  algo = "sha1";
              };
          };
          fdt@0 {
              description = "Flattened Device Tree blob";
              data = /incbin/("./${dtb_file_only}");
              type = "flat_dt";
              arch = "arm64";
              compression = "none";
              hash@1 {
                  algo = "sha1";
              };
          };
          ramdisk@0 {
              description = "ramdisk";
              data = /incbin/("./initrd.img-${kernel_version}");
              type = "ramdisk";
              arch = "arm64";
              os = "linux";
              compression = "gzip";
              hash@1 {
                  algo = "sha1";
              };
          };
      };
      configurations {
          default = "conf@1";
          conf@1 {
              description = "Boot Linux kernel with FDT blob + ramdisk";
              kernel = "kernel@0";
              fdt = "fdt@0";
              ramdisk = "ramdisk@0";
              hash@1 {
                  algo = "sha1";
              };
          };
      };
  };
ITSTEMPLATE

ocwd="${CWD}"
cd "${tmpdir}"
mkimage -f image.its image.itb
cd "${ocwd}"

echo "${tmpdir}/image.itb"
